name: Release
on:
  workflow_run:
    workflows: ["Docker"]
    types:
      - completed

jobs:
  run-curl:
    runs-on: ubuntu-latest
    steps:
    - name: Restart Bot
      env:
        PTERODACTYL_API_TOKEN: ${{ secrets.PTERODACTYL_API_TOKEN }}
        PTERODACTYL_API_URL: ${{ secrets.PTERODACTYL_API_URL }}
        PTERODACTYL_APPLICATION_TOKEN: ${{ secrets.PTERODACTYL_APPLICATION_TOKEN }}
        EXTERNAL_ID: aurionstaff
      run: |
        apt install jq
        externalIdJson=`curl --silent -X GET "${PTERODACTYL_API_URL}/api/application/servers/external/${EXTERNAL_ID}"\
                -H "Accept: application/json" -H "Content-Type: application/json"\
                -H "Accept: application/json" -H "Content-Type: application/json"`
        internId=`echo $externalIdJson | jq -r '.attributes.id'`
        identifier=`echo $externalIdJson | jq -r '.attributes.identifier'`
        environnment=`echo $externalIdJson | jq -r '.attributes.container.environment'`
        startupCommand=`echo $externalIdJson | jq -r '.attributes.container.startup_command'`
        egg=`echo $externalIdJson | jq -r '.attributes.egg'`

        data='{
            "startup": "'$startupCommand'",
            "environment": '$environnment',
            "egg": "'$egg'",
            "image": "ghcr.io/mineaurion/aurionstaff:'${GITHUB_REF#refs/*/}'",
            "skip_scripts": true
        }'

        curl -X PATCH "${PTERODACTYL_API_URL}/api/application/servers/$internId/startup"\
            -H "Accept: application/json" -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${PTERODACTYL_APPLICATION_TOKEN}"\
            -d "${data}"

        curl -X POST "${PTERODACTYL_API_URL}/api/client/servers/$identifier/power" \
            -H "Accept: application/json" -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${PTERODACTYL_API_TOKEN}"\
            -d '{ "signal": "restart" }'
